{"version":3,"sources":["logo.svg","Trigger.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Trigger","toast","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","selectedCity","setSelectedCity","React","createElement","className","Toast","ref","Dropdown","value","onChange","e","options","name","code","optionLabel","placeholder","Button","label","icon","onClick","setTimeout","current","show","severity","summary","detail","life","App","src","logo","alt","style","height","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6PCOzB,SAASC,IAEpB,IAAMC,EAAQC,iBAAO,MAErBC,EAC8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAW1BI,EACwCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAQpC,OACIG,IAAAC,cAAA,OAAKC,UAAU,oDACXF,IAAAC,cAACE,IAAK,CAACC,IAAKhB,IACZY,IAAAC,cAACI,IAAQ,CAACC,MAAOR,EAAcS,SAAU,SAACC,GAAC,OAAKT,EAAgBS,EAAEF,QAAQG,QAVpE,CACV,CAAEC,KAAM,WAAYC,KAAM,OAC1B,CAAED,KAAM,WAAYC,KAAM,OAC1B,CAAED,KAAM,WAAYC,KAAM,OAC1B,CAAED,KAAM,aAAcC,KAAM,UAMkEC,YAAY,OAClGC,YAAY,gBAAgBX,UAAU,sBACtCF,IAAAC,cAAA,WAASD,IAAAC,cAAA,WACbD,IAAAC,cAACa,IAAM,CAACC,MAAM,SAASC,KAAK,aAAatB,QAASA,EAASuB,QAxBtD,WACTtB,GAAW,GAEXuB,WAAW,WACPvB,GAAW,GACXP,EAAM+B,QAAQC,KAAK,CAACC,SAAS,UAAWC,QAAS,UAAWC,OAAO,iBAAkBC,KAAM,OAC5F,SCDIC,MAdf,WAEE,OACEzB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,OAAKyB,IAAKC,IAAMzB,UAAU,WAAW0B,IAAI,OAAOC,MAAO,CAACC,OAAW,WAEnE9B,IAAAC,cAACd,EAAO,SCAD4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxChD,EAAAuB,EAAA,GAAA0B,KAAAjD,EAAAkD,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,wBCKDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH9C,IAAAC,cAACD,IAAM+C,WAAU,KACf/C,IAAAC,cAACwB,EAAG,QAORM","file":"static/js/main.0a9a4508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState } from \"react\";\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useRef } from 'react';\nimport { Toast } from 'primereact/toast';\n\n\nexport default function Trigger() {\n    // Toast\n    const toast = useRef(null);\n\n    // Button\n    const [loading, setLoading] = useState(false);\n\n    const load = () => {\n        setLoading(true);\n\n        setTimeout(() => {\n            setLoading(false);\n            toast.current.show({severity:'success', summary: 'Success', detail:'Test Triggered', life: 3000});\n        }, 2000);\n    };\n\n    // Dropdown\n    const [selectedCity, setSelectedCity] = useState(null);\n    const tests = [\n        { name: 'BTC Flow', code: 'BTC' },\n        { name: 'ETH Flow', code: 'ETH' },\n        { name: 'XDC Flow', code: 'XDC' },\n        { name: 'MATIC FLow', code: 'MATIC' }\n    ];\n\n    return (        \n        <div className=\"card flex flex-wrap justify-content-center gap-3\">\n            <Toast ref={toast} />\n            <Dropdown value={selectedCity} onChange={(e) => setSelectedCity(e.value)} options={tests} optionLabel=\"name\" \n                placeholder=\"Select a test\" className=\"w-full md:w-14rem\" />\n                <br></br><br></br>\n            <Button label=\"Submit\" icon=\"pi pi-play\" loading={loading} onClick={load} />\n        </div>\n    )\n}\n  ","import logo from './logo.svg';\nimport './App.css';\nimport Trigger from './Trigger';\nimport React from \"react\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" style={{\"height\" : \"250px\"}}/>\n\n        <Trigger></Trigger>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//theme\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";     \n//core\nimport \"primereact/resources/primereact.min.css\";\n//icons\nimport \"primeicons/primeicons.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}